(defvar lines-of-trash (list 'l))

(defvar free-locations (list 'f))
(defvar trash-locations (list 't))

(defun collect-garbage (variable varsize address)
  (let ((index 0) (var-ref 0)
        (brackets 0) (in-routine nil)
        (routine nil) (in-label nil)
        (the-labels (list 'l)) (dirty-labels (list 'l))
        (dirty-routines (list 'l)) (passed-labels (list 'l))
        (found-variable nil))
    (loop
      (when (>= index (length code-string))(return))
      (when (equal "(" (elt code-string index))(incf brackets))
      (when (equal ")" (elt code-string index))(setf brackets (- brackets 1)))

      (when (equal "ROUTINE" (elt code-string index))
        (setf routine (elt code-string (+ index 1)))
        (setf in-routine t)
      )
      (when (equal "LABEL" (elt code-string index))
        (setf the-labels (concatenate 'list the-labels (list (elt code-string (+ index 1)))))
        (setf in-label t)
      )
      (when (equal "GOTO" (elt code-string index))
        (when (in-list (elt code-string (+ index 1)) dirty-labels)
          (setf var-ref (+ var-ref 1))
        )
      )
      (when (equal "EXECUTE" (elt code-string index))
        (when (in-list (elt code-string (+ index 1)) dirty-routines)
          (setf var-ref (+ var-ref 1))
          (when in-routine
            (setf dirty-routines (concatenate 'list dirty-routines (list routine)))
          )
        )
      )
      (when (equal variable (elt code-string index))
        (incf var-ref)
        (when in-routine
          (setf dirty-routines (concatenate 'list dirty-routines (list routine)))
        )
        (when in-label
          (setf dirty-labels (concatenate 'list dirty-labels the-labels))
        )
      )
      (when (and in-routine (zerop brackets))(setf in-routine nil))
      (incf index)
    )
    (setf index 0)
    (setf in-label nil)
    (loop
      (when (zerop var-ref) (return))
      (when (equal variable (elt code-string index))
        (setf var-ref (- var-ref 1))
        (setf found-variable t)
      )
      (when (equal "EXECUTE" (elt code-string index))
        (when (in-list (elt code-string (+ index 1)) dirty-routines)
          (setf var-ref (- var-ref 1))
        )
      )
      (when (equal "GOTO" (elt code-string index))
        (when (in-list (elt code-string (+ index 1)) dirty-labels)
          (when (in-list (elt code-string (+ index 1)) passed-labels)
            (when found-variable
              (setf var-ref (- var-ref 1))
            )
          )
        )
      )
      (when (equal "LABEL" (elt code-string index))
        (when (in-list (elt code-string (+ index 1)) dirty-labels)
          (setf passed-labels (concatenate 'list passed-labels (list (elt code-string (+ index 1)))))
        )
      )
      (incf index)
    )
    (loop
      (when (equal ")" (elt code-string index))(return))
      (incf index)
    )
    (incf index)
    (setf trash-locations (concatenate 'list trash-locations (list (cons address varsize) index)))
  )
)